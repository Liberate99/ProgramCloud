package ${package.Controller};

import com.baomidou.mybatisplus.mapper.EntityWrapper;
import com.baomidou.mybatisplus.plugins.Page;
import ${package.Entity}.${entity};
import ${package.Service}.${table.serviceName};
import com.yunjuanyunshu.yunfd.aop.annotation.ClassAnnot;
import com.yunjuanyunshu.yunfd.aop.annotation.MethodAnnot;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import java.util.List;


/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Component
@ClassAnnot("business.${entity.substring(0,1).toLowerCase()}${entity.substring(1)}")
public class ${table.controllerName}  {
        private static ${table.serviceName} ${entity.substring(0,1).toLowerCase()}${entity.substring(1)}Service;

        /**
         * 静态注入service
         *
         * @param ${entity.substring(0,1).toLowerCase()}${entity.substring(1)}Service
         */
        @Autowired
        public ${table.controllerName} (${table.serviceName} ${entity.substring(0,1).toLowerCase()}${entity.substring(1)}Service){
            ${table.controllerName} .${entity.substring(0,1).toLowerCase()}${entity.substring(1)}Service=${entity.substring(0,1).toLowerCase()}${entity.substring(1)}Service;
        }

        /**
         * Delete boolean.
         *
         * @param ${entity.substring(0,1).toLowerCase()}${entity.substring(1)} the ${entity.substring(0,1).toLowerCase()}${entity.substring(1)}
         * @return the boolean
         */
        @MethodAnnot
        public static boolean delete(${entity} ${entity.substring(0,1).toLowerCase()}${entity.substring(1)}){
                return ${entity.substring(0,1).toLowerCase()}${entity.substring(1)}Service.deleteById(${entity.substring(0,1).toLowerCase()}${entity.substring(1)});
        }

        /**
         * Insert or update boolean.
         *
         * @param ${entity.substring(0,1).toLowerCase()}${entity.substring(1)} the ${entity.substring(0,1).toLowerCase()}${entity.substring(1)}
         * @return the boolean
         */
        @MethodAnnot
        public static boolean insertOrUpdate(${entity} ${entity.substring(0,1).toLowerCase()}${entity.substring(1)}){
                return ${entity.substring(0,1).toLowerCase()}${entity.substring(1)}Service.insertOrUpdate(${entity.substring(0,1).toLowerCase()}${entity.substring(1)});
        }

        /**
         * Get ${entity.substring(0,1).toLowerCase()}${entity.substring(1)}.
         *
         * @param ${entity.substring(0,1).toLowerCase()}${entity.substring(1)} the ${entity.substring(0,1).toLowerCase()}${entity.substring(1)}
         * @return the ${entity.substring(0,1).toLowerCase()}${entity.substring(1)}
         */
        @MethodAnnot
        public static ${entity} get(${entity} ${entity.substring(0,1).toLowerCase()}${entity.substring(1)}){
                return ${entity.substring(0,1).toLowerCase()}${entity.substring(1)}Service.selectById(${entity.substring(0,1).toLowerCase()}${entity.substring(1)});
        }

        /**
         * Gets ${entity.substring(0,1).toLowerCase()}${entity.substring(1)} by page.
         *
         * @return the ${entity.substring(0,1).toLowerCase()}${entity.substring(1)} by page
         */
        @MethodAnnot
        public static Page<${entity}> get${entity}ByPage(Page<${entity}> page){
            return ${entity.substring(0,1).toLowerCase()}${entity.substring(1)}Service.selectPage(page,
                new EntityWrapper<${entity}>().orderBy(page.getOrderByField(),
                    page.isAsc()));
        }
        }